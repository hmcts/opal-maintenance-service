server:
  port: 4551
  shutdown: "graceful"

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

springdoc:
  packagesToScan: uk.gov.hmcts.reform.opal.controllers
  writer-with-order-by-keys: true

spring:
  config:
    import: "optional:configtree:/mnt/secrets/opal/"
  application:
    name: Opal Maintenance Service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${OPAL_MAINTENANCE_DB_HOST:localhost}:${OPAL_MAINTENANCE_DB_PORT:5432}/${OPAL_MAINTENANCE_DB_NAME:opal-maintenance-db}${OPAL_MAINTENANCE_DB_OPTIONS:}
    username: ${OPAL_MAINTENANCE_DB_USERNAME:opal-maintenance}
    password: ${OPAL_MAINTENANCE_DB_PASSWORD:opal-maintenance}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 10000
      poolName: OpalHikariCP
      maxLifetime: 7200000
      connectionTimeout: 30000
  jpa:
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            # silence the 'wall-of-text' - unnecessary exception throw about blob types
            non_contextual_creation: true
  flyway:
    baseline-on-migrate: true
    enabled: true

dbMigration:
  # When true, the app will run DB migration on startup.
  # Otherwise, it will just check if all migrations have been applied (and fail to start if not).
  runOnStartup: ${RUN_DB_MIGRATION_ON_STARTUP:true}

azure:
  application-insights:
    instrumentation-key: ${opal.AppInsightsInstrumentationKey:00000000-0000-0000-0000-000000000000}
